# ---------- ESTOP  ----------
# Handles all internal processing required to manage estop functions
# Note: This setup does not have a mean to trigger physical estop from software
#       Instead, physical estop will trigger linuxcnc and trigger als drives via hardwiring to estop/STO
#       Further, a semiconductor port of the deployed PILZ relay triggers linuxcnc (DI-ESTOP-ext)
#       Within linuxCNC, there ar emultiple other signal sources that may trigger soft estop
#       This file also handles warnings
# Handles and Displays Warnings from Pneumatic Pressure Sensor, Drives and Probe

net     SYS-estop-out                               <= iocontrol.0.user-enable-out

###########################################################
# error handling
###########################################################


# write resulting error assessment to iocontrol.0.emc-enable-in
net emc-enable-groot-error <= groot-error.emc-enable-out
net emc-enable-groot-error => iocontrol.0.emc-enable-in

net machine-is-on => groot-error.emc-on
net emc-auto => groot-error.emc-auto

net spindle-enable => groot-error.spindle-enable-in 

net DI-ESTOP-ext  => groot-error.estop-external groot-error.emc-enable-in
net pendant-estop  => groot-error.estop-pendant

net vfd-error  => groot-error.vfd-err
net vfd-error-code => groot-error.vfd-error-code

# net spindle-max-temp-trigger    comp.temp.out => groot-error.spindle-temp-err
setp groot-error.spindle-temp-err 0


net    DI-CNC-tls-ot         => groot-error.tls-overtravel

#net DI-CNC-pressure-alarm  => groot-error.air-ok
setp groot-error.air-ok 1

#TODO Move drive part to axis.hal

net     SRV-fault-a         lcec.0.a-axis.srv-fault    # => groot-error.axis-fault-a
net     SRV-fault-x         lcec.0.x-axis.srv-fault    # => groot-error.axis-fault-x
net     SRV-fault-y1        lcec.0.y1-axis.srv-fault   #  => groot-error.axis-fault-y1
net     SRV-fault-y2        lcec.0.y2-axis.srv-fault   #  => groot-error.axis-fault-y2
net     SRV-fault-z         lcec.0.z-axis.srv-fault    # => groot-error.axis-fault-z



#TODO Define no of slaves
setp groot-error.ec-slaves 16

net ec-slaves-responding => groot-error.ec-slaves-responding
net ec-link-up => groot-error.ec-link-up
net ec-all-op => groot-error.ec-all-op


### Fault Reset on Machine-on

net machine-is-on  => oneshot.fault.in
setp oneshot.fault.width 0.1
setp oneshot.fault.retriggerable false

net machine-on-fault-clear <= oneshot.fault.out
net machine-on-fault-clear lcec.0.a-axis.srv-fault-reset
net machine-on-fault-clear  => lcec.0.x-axis.srv-fault-reset
net machine-on-fault-clear => lcec.0.y1-axis.srv-fault-reset
net machine-on-fault-clear => lcec.0.y2-axis.srv-fault-reset
net machine-on-fault-clear => lcec.0.z-axis.srv-fault-reset
net machine-on-fault-clear  => lcec.0.spindle.fault-reset


# ----- ESTOP LIGHT  ----- 

# TODO: Reactivate, remove blinking
# invert emc-enable-groot-error


net     emc-enable-groot-error                    not.estop.in                      
net     DO-HMI-light-red                             not.estop.out
